name: CI&CD

env:
  SERVICE: portfolio
  REGION: europe-north1

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm dlx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if:
      ${{ github.event_name == 'push' &&
      !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build and Push Container
        run: |-
          DOCKER_BUILDKIT=1 docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: ${{ env.SERVICE }}
          image:
            gcr.io/${{ secrets.GCP_PROJECT }}/${{ env.SERVICE }}:${{ github.sha
            }}
          region: ${{ env.REGION }}
          env_vars_file: .env

      - name: "Service output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'
